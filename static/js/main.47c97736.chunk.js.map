{"version":3,"sources":["components/Additem.js","components/Item.js","components/Items.js","components/easyHttp.js","components/Pagination.js","App.js","components/Storage.js","index.js"],"names":["firstState","name","content","id","Additem","props","add","useRef","update","deleted","useState","state","changeState","onType","e","target","value","isFirstRun","useEffect","data","current","style","display","className","type","placeholder","onChange","marginRight","ref","onClick","addItem","updateItem","deleteItem","Item","initialState","item","href","preventDefault","onEditItem","Items","length","map","key","http","url","fetch","responce","json","resData","method","headers","body","JSON","stringify","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","App","localStorage","parse","getItem","err","console","error","getFromStorage","changeData","currentPage","setCurrentPage","postPerPage","indexOfLastPost","indexOfFirstPost","currentState","slice","get","then","items","forEach","post","list","log","setItem","storeInStorage","newItems","stuff","put","delete","filter","todo","states","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47c97736.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst firstState = {\r\n        name:'',\r\n        content:'',\r\n        id:null\r\n}\r\n\r\nfunction Additem(props) {\r\n\r\n    const add = useRef()\r\n    const update = useRef()\r\n    const deleted = useRef()\r\n   \r\n    const [state, changeState] = useState(firstState)\r\n\r\n    const onType = (e) =>{\r\n        changeState({...state, [e.target.name]:e.target.value})\r\n    }\r\n    const isFirstRun = useRef(false)\r\n    useEffect(()=>{\r\n        changeState({...state, name:props.data.name, content:props.data.content, id:props.data.id})\r\n        if(isFirstRun.current){\r\n            add.current.style.display = \"none\";\r\n            update.current.style.display = \"inline\";\r\n            deleted.current.style.display = \"inline\";\r\n        }else{\r\n            isFirstRun.current = true;\r\n        }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.data])\r\n\r\n    const onSubmit = ()=>{\r\n        props.addItem(state)\r\n        changeState(firstState)\r\n    }\r\n\r\n    const onUpdate = ()=>{\r\n        props.updateItem(state)\r\n        changeState(firstState)\r\n        add.current.style.display = \"inline\";\r\n        update.current.style.display = \"none\";\r\n        deleted.current.style.display = \"none\";\r\n    }\r\n\r\n    const onDelete = ()=>{\r\n        props.deleteItem(state.id)\r\n        changeState(firstState)\r\n        add.current.style.display = \"inline\";\r\n        update.current.style.display = \"none\";\r\n        deleted.current.style.display = \"none\";\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"input-field col s6\">\r\n                <input type='text' name='name' placeholder='Add Title' value={state.name} onChange={onType}/>\r\n                <label>Title</label>\r\n            </div>\r\n            <div className=\"input-field col s6\">\r\n                <input type=\"text\" name='content' placeholder='Add content' value={state.content} onChange={onType}/>\r\n                <label>Content</label>\r\n            </div>\r\n            <button style={{display:'inline', marginRight:'1rem'}} ref={add} onClick={onSubmit} className=\"add-btn btn green darken-1\">Add Blog</button>\r\n            <button style={{display:'none',marginRight:'1rem'}}  ref={update} onClick={onUpdate} className=\"update-btn btn  lime darken-1\">Update Blog</button>\r\n            <button style={{display:'none',marginRight:'1rem'}}  ref={deleted} onClick={onDelete} className=\"delete-btn btn  blue-grey darken-4\">Delete Blog</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nAdditem.propTypes = {\r\n    addItem: PropTypes.func.isRequired,\r\n    updateItem: PropTypes.func.isRequired,\r\n    deleteItem: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Additem\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Item(props) {\r\n    const initialState = {\r\n        name:props.item.name,\r\n        content: props.item.content,\r\n        id:props.item.id\r\n    }\r\n    const editItem = (e) =>{\r\n        e.preventDefault()\r\n        props.onEditItem(initialState)\r\n    }\r\n    \r\n    return (\r\n            <li className=\"collection-item\">\r\n                <strong>{props.item.name}\r\n                <a href=\"google.com\" className=\"secondary-content\"><i className=\"edit-item fa fa-pencil\" onClick={editItem}></i></a>\r\n                </strong><br></br><p>{props.item.content}</p>\r\n            </li>\r\n    )\r\n}\r\n\r\nItem.propTypes = {\r\n    item: PropTypes.object.isRequired,\r\n    onEditItem: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Item\r\n\r\n\r\n","import React from 'react'\r\nimport Item from './Item'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Items(props) {\r\n\r\n    return (\r\n            <ul>\r\n                {props.state.length > 0 ? (<>{props.state.map(item =>(\r\n                <Item key={item.id} item={item} onEditItem={props.onEditItem} />\r\n                ))}</>) : <li>Log not found</li> }\r\n            </ul>\r\n    )\r\n}\r\n\r\nItems.propTypes = {\r\n    state: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Items\r\n\r\n","class EasyHttp {\r\n\r\n    async get(url){\r\n        const responce = await fetch(url)\r\n        const resData = await responce.json()\r\n\r\n        return resData\r\n    }\r\n\r\n    async post(url, data){\r\n        const responce = await fetch(url, {\r\n            method: 'POST',\r\n            headers:{'Content-type':'application/json'},\r\n            body:JSON.stringify(data)\r\n        })\r\n        const resData = await responce.json()\r\n        return resData\r\n    }\r\n\r\n    async put(url, data){\r\n        const responce = await fetch(url, {\r\n            method: 'PUT',\r\n            headers:{'Content-type':'application/json'},\r\n            body:JSON.stringify(data)\r\n        })\r\n        const resData = await responce.json()\r\n        return resData\r\n    }\r\n\r\n    async delete(url){\r\n        const responce = await fetch(url, {\r\n            method: 'DELETE',\r\n            headers:{'Content-type':'application/json'},\r\n        })\r\n        const resData = await responce.json()\r\n        return resData\r\n    }\r\n}\r\n\r\nexport const http = new EasyHttp()","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} >\r\n            <a onClick={() => paginate(number)} href='!#' >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, {useState, useEffect} from 'react';\nimport Additem from './components/Additem';\nimport Items from './components/Items';\nimport {getFromStorage, storeInStorage} from './components/Storage'\nimport {http} from './components/easyHttp'\nimport Pagination from './components/Pagination';\n\nfunction App() {\n\n  const initialState =() => getFromStorage('data') || []\n  const [state, changeState] = useState(initialState)\n  const [data, changeData] = useState({name:'', content:'', id:null})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postPerPage] = useState(5)\n\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentState = state.slice(indexOfFirstPost, indexOfLastPost)\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  \n  http.get('http://localhost:3000/data')\n  .then(items => {\n    if(items.length === 0){\n      if(initialState.length !==0){\n        initialState.forEach(item =>http.post('http://localhost:3000/data', item)).then(list => console.log(list))\n      }\n    }\n  })\n\n  useEffect(() => {\n    storeInStorage('data', state)\n  }, [state]);\n\n  const addItem = (item)=> {\n    http.post('http://localhost:3000/data', item)\n    .then(items =>{const newItems = [...state, items]; changeState(newItems)})\n  }\n\n  const onEditItem = (states) => {\n    changeData({...data, name:states.name, content:states.content, id:states.id})\n}\n  \n  const updateItem = (stuff)=>{\n    changeState(state.map((item) => {\n      if(stuff.id === item.id){\n        http.put(`http://localhost:3000/data/${item.id}`, stuff)\n        item = stuff\n      }\n      return item\n    }))\n  }\n  const deleteItem = (id) =>{\n    http.delete(`http://localhost:3000/data/${id}`)\n    changeState([...state.filter(todo => todo.id !== id)])\n  }\n\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-wrapper blue\">\n            <div className=\"container\">\n                <a href=\"nelsonnnn.github.io\" className=\"brand-logo\">Create Blog and Edit</a>\n            </div>\n        </div>\n      </nav><br/>\n      <Additem addItem={addItem} updateItem={updateItem} deleteItem={deleteItem} data={data} />\n      <Items state={currentState} onEditItem={onEditItem}/>\n      <Pagination postsPerPage={postPerPage} totalPosts={state.length} paginate={paginate} />\n    </div>\n  )\n}\n\nexport default App\n","export const getFromStorage = (key) => {\r\n\tif (!localStorage) return;\r\n\r\n\ttry {\r\n\t\treturn JSON.parse(localStorage.getItem(key));\r\n\t} catch (err) {\r\n\t\tconsole.error(`Error getting item ${key} from localStorage`, err);\r\n\t}\r\n};\r\n\r\nexport const storeInStorage = (key, item) => {\r\n\tif (!localStorage) return;\r\n\r\n\ttry {\r\n\t\treturn localStorage.setItem(key, JSON.stringify(item));\r\n\t} catch (err) {\r\n        console.error(`Error storing item ${key} to localStorage`, err);\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}